<?php

/**
 * @file
 * Contains farm_field.module.
 */

use Drupal\Core\Entity\EntityTypeInterface;

/**
 * Implements hook_entity_base_field_info().
 */
function farm_field_entity_base_field_info(EntityTypeInterface $entity_type) {

  // Include helper functions.
  module_load_include('inc', 'farm_field', 'farm_field.base_fields');

  // Add common base fields to all asset types.
  if ($entity_type->id() == 'asset') {
    return farm_field_asset_base_fields();
  }

  // Add common base fields to all log types.
  elseif ($entity_type->id() == 'log') {
    return farm_field_log_base_fields();
  }
}

/**
 * Implements hook_entity_base_field_info_alter().
 */
function farm_field_entity_base_field_info_alter(&$fields, EntityTypeInterface $entity_type) {

  // Only alter asset and log fields.
  if (!in_array($entity_type->id(), ['asset', 'log'])) {
    return;
  }

  $alter_fields = [
    'name' => [
      'label' => 'hidden',
      'weight' => -100,
    ],
    'timestamp' => [
      'weight' => -90,
    ],
    'status' => [
      'weight' => -80,
    ],
    'created' => [
      'hidden' => TRUE,
    ],
    'uid' => [
      'hidden' => TRUE,
    ],
  ];
  foreach ($alter_fields as $name => $options) {

    // If the field does not exist on this entity type, skip it.
    if (empty($fields[$name])) {
      continue;
    }

    // Load the form and view display options.
    $form_display_options = $fields[$name]->getDisplayOptions('form');
    $view_display_options = $fields[$name]->getDisplayOptions('view');

    // Set the field weight.
    if (!empty($options['weight'])) {
      $form_display_options['weight'] = $view_display_options['weight'] = $options['weight'];
    }

    // Hide the field, if desired.
    if (!empty($options['hidden'])) {
      $form_display_options = ['region' => 'hidden'];
      $view_display_options = ['region' => 'hidden'];
    }

    // Or, hide the label, if desired.
    elseif (!empty($options['label']) && $options['label'] == 'hidden') {
      $view_display_options['label'] = 'hidden';
    }

    // Otherwise, set the label to inline.
    else {
      $view_display_options['label'] = 'inline';
    }

    // Change state field from transition form to default.
    if ($name == 'status') {
      $view_display_options['type'] = 'list_default';
    }

    // Save the options.
    $fields[$name]->setDisplayOptions('form', $form_display_options);
    $fields[$name]->setDisplayOptions('view', $view_display_options);
  }
}
